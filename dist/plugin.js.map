{"version":3,"file":"plugin.js","sources":["esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class ScreenOrientationWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'ScreenOrientation',\n            platforms: ['web', 'android', 'ios'],\n        });\n        this.orientation = window.screen.orientation;\n    }\n    getScreenOrientation() {\n        var my_orientation = { \"orientation\": \"PORTRAIT_PRIMARY\" };\n        let orient = (screen.orientation || {}).type;\n        switch (orient) {\n            case \"landscape-primary\":\n                my_orientation.orientation = \"landscape-primary\";\n                break;\n            case \"landscape-secondary\":\n                my_orientation.orientation = \"landscape-secondary\";\n                break;\n            case \"portrait-secondary\":\n                my_orientation.orientation = \"portrait-secondary\";\n                break;\n            case \"portrait-primary\":\n                my_orientation.orientation = \"portrait-primary\";\n                break;\n            default:\n                break;\n        }\n        return Promise.resolve(orientation);\n    }\n    lockScreenOrientation(options) {\n        console.log(options);\n        switch (options.orientation) {\n            case \"LANDSCAPE_PRIMARY\":\n                this.orientation.lock(\"landscape-primary\");\n                break;\n            case \"PORTRAIT_PRIMARY\":\n                this.orientation.lock(\"portrait-primary\");\n                break;\n            case \"LANDSCAPE_SECONDARY\":\n                this.orientation.lock(\"landscape-secondary\");\n                break;\n            case \"LANDSCAPE_PRIMARY\":\n                this.orientation.lock(\"landscape-primary\");\n                break;\n            default:\n                break;\n        }\n    }\n    unlockScreenOrientation() {\n        this.orientation.unlock();\n    }\n    rotateTo() {\n        console.log(\"Not Supported on web...\");\n    }\n    registerOrientationChangeListener() {\n        screen.orientation.addEventListener('change', () => {\n            this.getScreenOrientation().then((my_orientation) => {\n                this.notifyListeners(\"orientation_changed\", my_orientation);\n            });\n        });\n    }\n}\nconst ScreenOrientation = new ScreenOrientationWeb();\nexport { ScreenOrientation };\nimport { registerWebPlugin } from '@capacitor/core';\nregisterWebPlugin(ScreenOrientation);\n//# sourceMappingURL=web.js.map"],"names":["WebPlugin","registerWebPlugin"],"mappings":";;;IACO,MAAM,oBAAoB,SAASA,cAAS,CAAC;IACpD,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC;IACd,YAAY,IAAI,EAAE,mBAAmB;IACrC,YAAY,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC;IAChD,SAAS,CAAC,CAAC;IACX,QAAQ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;IACrD,KAAK;IACL,IAAI,oBAAoB,GAAG;IAE3B,QAAQ,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,EAAE,IAAI,CAAC;IAiBrD,QAAQ,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC5C,KAAK;IACL,IAAI,qBAAqB,CAAC,OAAO,EAAE;IACnC,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC7B,QAAQ,QAAQ,OAAO,CAAC,WAAW;IACnC,YAAY,KAAK,mBAAmB;IACpC,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC3D,gBAAgB,MAAM;IACtB,YAAY,KAAK,kBAAkB;IACnC,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC1D,gBAAgB,MAAM;IACtB,YAAY,KAAK,qBAAqB;IACtC,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC7D,gBAAgB,MAAM;IACtB,YAAY,KAAK,mBAAmB;IACpC,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC3D,gBAAgB,MAAM;IAGtB,SAAS;IACT,KAAK;IACL,IAAI,uBAAuB,GAAG;IAC9B,QAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAClC,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAC/C,KAAK;IACL,IAAI,iCAAiC,GAAG;IACxC,QAAQ,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IAC5D,YAAY,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,CAAC,cAAc,KAAK;IACjE,gBAAgB,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAC;IAC5E,aAAa,CAAC,CAAC;IACf,SAAS,CAAC,CAAC;IACX,KAAK;IACL,CAAC;AACI,UAAC,iBAAiB,GAAG,IAAI,oBAAoB,GAAG;AAGrDC,0BAAiB,CAAC,iBAAiB,CAAC;;;;;;;;;;;"}